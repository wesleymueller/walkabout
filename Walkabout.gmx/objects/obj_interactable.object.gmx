<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_interaction</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables

// interacted = 0;

axishold = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interaction Timer

if global.interactionTimer &gt; 0 {
    global.interactionTimer--;
    global.interactionTimer = clamp(global.interactionTimer, 0, global.interactionTimerMax)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interaction 

gpInteract = gamepad_button_check_pressed(0, gp_face1);

keyInteract = keyboard_check_pressed(vk_space);

if place_meeting(x, y, obj_player) {
    if (gpInteract || keyInteract) &amp;&amp; (interacted == 0) {
        global.interactionTimer = global.interactionTimerMax;
        global.interacting = 1;
//        global.paused = 1;
        global.cursorPosition = 0;
        
        interacted = 1;
        global.interactions[room, interactionNumber] = 1;
        global.interactCount++;
        sprite_index = spr_interacted;
    }
}

if (gpInteract || keyInteract) &amp;&amp; (global.interactionTimer == 0) &amp;&amp; (interacted == 1) {
//    global.paused = 0;
    global.interacting = 0;
    global.interactionText = "";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move Cursor during Dialog

gpdown = gamepad_button_check_pressed(0, gp_padd);
gpup = gamepad_button_check_pressed(0, gp_padu);
keydown = keyboard_check_pressed(vk_down);
keyup = keyboard_check_pressed(vk_up);
gpaxis = gamepad_axis_value(0, gp_axislv);
gadown = 0;
gaup = 0;



if (gpaxis &gt; 0.1) &amp;&amp; (axishold == 0) {
    axishold = 1;
    gadown = 1;

    
}
if (gpaxis &lt; -0.1) &amp;&amp; (axishold == 0) {
    axishold = 1;
    gaup = 1;
}
if (gpaxis &lt; 0.1) &amp;&amp; (gpaxis &gt; -0.1) {
    gaup = 0;
    gadown = 0;
    axishold = 0;
}

if global.interacting &amp;&amp; place_meeting(x, y, obj_player) {
    if (gpdown || keydown || gadown) {
        audio_play_sound(sd_cursor, 0, false);
        global.cursorPosition++;
        if global.cursorPosition &gt; array_length_1d(choices) - 1 {
            global.cursorPosition = 0;
        }
    }
    
    if (gpup || keyup || gaup) {
        audio_play_sound(sd_cursor, 0, false);
        global.cursorPosition--;
        if global.cursorPosition &lt; 0 {
            global.cursorPosition = array_length_1d(choices) - 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dialog choice
draw_set_font(font_ISO400);

dialogPosition = sign(global.playerx - view_xview[0]);


if (interacted == 0) {
    draw_sprite(spr_interaction, 0, x, y);
}

if (interacted == 1) {
    draw_sprite(spr_interacted, 0, x, y);
}

if (place_meeting(x, y, obj_player) &amp;&amp; interacted == 0) {
    global.interactionText = interactionText;
    // Draw Prompt Bubble
    if dialogPosition == 1 {
        draw_sprite(spr_promptBubbleLeft, 0, x + (dialogPosition * global.interactBubbleX), global.interactBubbleY);
    }
    if dialogPosition == -1 {
        draw_sprite(spr_promptBubbleRight, 0, x + (dialogPosition * global.interactBubbleX), global.interactBubbleY);
    }
    
    // Draw Prompt Text
    draw_set_color(c_black)
    draw_set_halign(fa_left);
    draw_text_ext(x + (-dialogPosition * global.interactTextX), y - (sprite_get_height(spr_PlayerStandingRight) / 2) - global.interactTextY, global.interactionText, -1, sprite_get_width(spr_promptBubbleRight) - 20);
}  

if global.interacting &amp;&amp; place_meeting(x, y, obj_player) {
    draw_set_color(c_black)
    draw_set_halign(fa_left);
    
    // Draw Player Bubble
    if dialogPosition == 1 {
        draw_sprite(spr_playerSpeechLeft, 0, global.playerx + (dialogPosition * global.bubbleX), global.bubbleY);
    }
    if dialogPosition == -1 {
        draw_sprite(spr_playerSpeechRight, 0, global.playerx + (dialogPosition * global.bubbleX), global.bubbleY);
    }
    
    // Draw Player Text
    for (i = 0; i &lt; array_length_1d(choices); i++) {
        if (i == global.cursorPosition) {
            draw_set_color(c_red);
        } else {
            draw_set_color(c_black)
        }
        draw_set_halign(fa_left);
        draw_text_ext(global.playerx + (dialogPosition * global.textX), (60 * i) + global.playery - (sprite_get_height(spr_PlayerStandingRight) / 2) - global.textY, choices[i], -1, sprite_get_width(spr_playerSpeechRight) - 30);
    }
    
    // Draw Cursor
    draw_sprite(spr_cursor, 1, global.playerx + (dialogPosition * global.textX) - sprite_get_width(spr_cursor) - 16, global.playery - (sprite_get_height(spr_PlayerStandingRight) / 2) - global.textY + (60 * global.cursorPosition));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
